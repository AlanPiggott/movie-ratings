name: Update Movie Ratings

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (10 items only)'
        required: false
        type: boolean
        default: false

jobs:
  update-ratings:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run rating updates
      env:
        CI: 'true'
        GITHUB_ACTIONS: 'true'
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        DATAFORSEO_LOGIN: ${{ secrets.DATAFORSEO_LOGIN }}
        DATAFORSEO_PASSWORD: ${{ secrets.DATAFORSEO_PASSWORD }}
        RATING_UPDATE_ENABLED: 'true'
        RATING_UPDATE_DAILY_LIMIT: ${{ vars.RATING_UPDATE_DAILY_LIMIT || '1000' }}
        RATING_UPDATE_BATCH_SIZE: ${{ vars.RATING_UPDATE_BATCH_SIZE || '100' }}
        TEST_MODE: ${{ inputs.test_mode }}
      run: |
        echo "Environment check:"
        echo "CI=$CI"
        echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
        echo "NEXT_PUBLIC_SUPABASE_URL is set: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' }}"
        echo "SUPABASE_SERVICE_KEY is set: ${{ secrets.SUPABASE_SERVICE_KEY != '' }}"
        echo "DATAFORSEO_LOGIN is set: ${{ secrets.DATAFORSEO_LOGIN != '' }}"
        echo "DATAFORSEO_PASSWORD is set: ${{ secrets.DATAFORSEO_PASSWORD != '' }}"
        echo ""
        
        if [ "${{ inputs.test_mode }}" = "true" ]; then
          echo "Running in TEST MODE (10 items only)"
          npx tsx scripts/update-ratings-scheduled-ci.ts --test
        else
          echo "Running production update"
          npx tsx scripts/update-ratings-scheduled-ci.ts
        fi
    
    # Optional: Upload logs if they exist
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rating-update-logs
        path: |
          data/rating-update-*.log
        retention-days: 7
        if-no-files-found: ignore

  # Fetch new releases daily  
  fetch-new-releases:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Fetch new releases
      env:
        CI: 'true'
        GITHUB_ACTIONS: 'true'
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        DATAFORSEO_LOGIN: ${{ secrets.DATAFORSEO_LOGIN }}
        DATAFORSEO_PASSWORD: ${{ secrets.DATAFORSEO_PASSWORD }}
        TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      run: npx tsx scripts/fetch-new-and-trending-ci.ts new-releases